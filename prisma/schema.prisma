generator client {
    provider = "prisma-client-js"
}

generator dbml {
    provider = "prisma-dbml-generator"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id         String    @id @db.VarChar(20)
    pw         String    @db.VarChar(255)
    role       User_role @default(user)
    active     Boolean   @default(true)
    created_at DateTime  @default(now()) @db.DateTime(0)
    broom      Int       @default(0) @db.UnsignedInt
    Issue      Issue[]
    Post       Post[]
}

model Issue {
    id         Int           @id @default(autoincrement()) @db.UnsignedInt
    user       User?         @relation(fields: [user_id], references: [id])
    user_id    String        @db.VarChar(20)
    active     Boolean       @default(true)
    solved     Boolean       @default(false)
    title      String        @default("") @db.VarChar(50)
    class      Int           @default(100)
    body       String        @default("") @db.Text
    created_at DateTime      @default(now()) @db.DateTime(0)
    user_lat   Decimal       @db.Decimal(16, 14)
    user_lng   Decimal       @db.Decimal(17, 14)
    Issue_img  Issue_image[]
}

model Detected_object {
    id            Int           @id @default(autoincrement()) @db.UnsignedInt
    img           Issue_image?  @relation(fields: [img_id], references: [id])
    img_id        Int           @db.UnsignedInt
    class         Object_class? @relation(fields: [class_id], references: [id])
    class_id      Int?          @db.UnsignedInt
    confidence    Float         @default(0) @map("prob") @db.Float
    bounding_size Float         @default(0) @db.Float

    @@map("Detected_obj")
}

model Issue_image {
    id              Int               @id @default(autoincrement()) @db.UnsignedInt
    issue           Issue?            @relation(fields: [issue_id], references: [id])
    issue_id        Int               @db.UnsignedInt
    org_name        String            @db.VarChar(255)
    src             String?           @db.VarChar(255)
    uploaded_at     DateTime          @default(now()) @db.DateTime(0)
    time            DateTime?         @db.DateTime(0)
    lat             Decimal           @default(0.00000000000000) @db.Decimal(16, 14)
    lng             Decimal           @default(0.00000000000000) @db.Decimal(17, 14)
    detected_object Detected_object[]

    @@map("Issue_img")
}

model Post_image {
    id      Int   @id @default(autoincrement()) @db.UnsignedInt
    post    Post? @relation(fields: [post_id], references: [id])
    post_id Int   @db.UnsignedInt

    @@map("Post_img")
}

model Post {
    id       Int          @id @default(autoincrement()) @db.UnsignedInt
    user     User?        @relation(fields: [user_id], references: [id])
    user_id  String       @db.VarChar(20)
    title    String
    category Category     @default(none)
    body     String?      @db.Text
    price    Int?         @db.UnsignedInt
    active   Boolean      @default(true)
    solved   Boolean      @default(false)
    Post_img Post_image[]
}

model Object_class {
    id              Int               @id @default(autoincrement()) @db.UnsignedInt
    name            String            @unique @db.VarChar(255)
    detected_object Detected_object[]
}

enum User_role {
    user
    admin
    test
}

enum Category {
    none
    quest
    trade
}
